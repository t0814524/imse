version: "3.3"
services:
  mariadb:
    image: mariadb:latest
    restart: always
    container_name: mariadb1
    environment:
      MYSQL_DATABASE: "db"
      MYSQL_USER: "user"
      MYSQL_PASSWORD: "password"
      MYSQL_ROOT_PASSWORD: "password"
    # ports:
    # exposed:inside container
    # - "3333:3306"
    # expose:
    #   - "3306"
    volumes:
      - mariadb_volume:/var/lib/mysql
      - ./sql:/docker-entrypoint-initdb.d/sql
      - ./sql/create.sql:/docker-entrypoint-initdb.d/create.sql
    networks:
      - app-network

  flask-app:
    build:
      context: . # dockerfile root
      dockerfile: demo/server/Dockerfile # dockerfile location
    container_name: flask-app
    environment:
      MYSQL_HOST: mariadb
      MYSQL_PORT: 3306
      MYSQL_USER: user
      MYSQL_PASSWORD: password
      MYSQL_DATABASE: db

      # mongo credentials
      MONGO_HOST: mongo
      MONGO_PORT: 27017
      MONGO_USERNAME: root
      MONGO_PASSWORD: example
    ports:
      - "5555:5555"
    depends_on:
      - mariadb
      - mongo
    networks:
      - app-network
    volumes:
      - ./sql:/app/sql

  # MongoDB Service
  mongo:
    image: mongo:latest
    container_name: mongo1
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
    # ports:
    # - "27018:27017"
    volumes:
      - mongo_volume:/data/db
    networks:
      - app-network

volumes:
  mariadb_volume:
  # source ./docker-entrypoint-initdb.d/sql/imse_create.sql
  mongo_volume:

networks:
  app-network:
    driver: bridge
